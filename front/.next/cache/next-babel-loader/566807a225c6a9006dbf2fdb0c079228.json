{"ast":null,"code":"import { delay, fork, all, takeLatest, put, call, takeLeading, throttle, debounce, take } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport axios from 'axios'; // import Axios from 'axios';\n// import qs from 'query-string';\n\nimport Cookies from 'universal-cookie';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_TO_ME, generateDummyPost, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS } from \"../reducers/post\";\nimport { REMOVE_POST_OF_ME } from \"../reducers/user\";\nconst cookies = new Cookies();\n\nfunction addPostAPI(data) {\n  const accessToken = cookies.get(\"accessToken\");\n  const userEmail = cookies.get(\"userEmail\");\n  const newObj = {\n    description: data,\n    email: userEmail\n  };\n  return axios.post('/auth/post', newObj, {\n    headers: {\n      \"Authorization\": `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.postId\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  const accessToken = cookies.get(\"accessToken\");\n  const userEmail = cookies.get(\"userEmail\");\n  const newObj = {\n    email: userEmail\n  };\n  return axios.patch(`/auth/post/${data}/like`, newObj, {\n    headers: {\n      \"Authorization\": `Bearer ${accessToken}`,\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Credentials\": true\n    }\n  });\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, 1);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data.result\n    });\n  } catch (error) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  const accessToken = cookies.get(\"accessToken\");\n  const userEmail = cookies.get(\"userEmail\");\n  const newObj = {\n    email: userEmail\n  };\n  return axios.delete(`/auth/post/${data}/like`, newObj, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Credentials\": true\n    }\n  });\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data.result\n    });\n  } catch (error) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/api/posts?page=${data.pageNumber}&size=${data.pageSize}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data.result\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  const accessToken = cookies.get(\"accessToken\");\n  const userEmail = cookies.get(\"userEmail\");\n  const newObj = {\n    description: data.description,\n    email: userEmail,\n    postId: data.postId\n  };\n  return axios.post('/auth/comment', newObj, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchAddPost() {\n  yield takeLeading(ADD_POST_REQUEST, addPost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLikePost), fork(watchUnlikePost), fork(watchLoadPost), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}\n;","map":{"version":3,"sources":["D:/miniproject/front/sagas/post.js"],"names":["delay","fork","all","takeLatest","put","call","takeLeading","throttle","debounce","take","shortId","axios","Cookies","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_TO_ME","generateDummyPost","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","REMOVE_POST_OF_ME","cookies","addPostAPI","data","accessToken","get","userEmail","newObj","description","email","post","headers","addPost","action","result","type","postId","error","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostAPI","pageNumber","pageSize","loadPost","removePostAPI","removePost","id","generate","addCommentAPI","addComment","console","log","watchLikePost","watchUnlikePost","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,IAA5C,EAAkDC,WAAlD,EAA+DC,QAA/D,EAAyEC,QAAzE,EAAmFC,IAAnF,QAA8F,oBAA9F;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,EAOIC,cAPJ,EAQIC,iBARJ,EASIC,iBATJ,EAUIC,iBAVJ,EAWIC,iBAXJ,EAYIC,iBAZJ,EAaIC,iBAbJ,EAcIC,iBAdJ,EAeIC,mBAfJ,EAgBIC,mBAhBJ,EAiBIC,mBAjBJ,EAkBIC,mBAlBJ,EAmBIC,mBAnBJ,EAoBIC,mBApBJ,QAqBO,kBArBP;AAsBA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,MAAMC,OAAO,GAAG,IAAItB,OAAJ,EAAhB;;AACA,SAASuB,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAY,aAAZ,CAApB;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAlB;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,WAAW,EAAGL,IADH;AAEXM,IAAAA,KAAK,EAAGH;AAFG,GAAf;AAIA,SAAO5B,KAAK,CAACgC,IAAN,CAAW,YAAX,EAAyBH,MAAzB,EAAgC;AACnCI,IAAAA,OAAO,EAAC;AACJ,uBAAkB,UAASP,WAAY,EADnC;AAEJ,sBAAgB;AAFZ;AAD2B,GAAhC,CAAP;AAMH;;AAED,UAAUQ,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAM1C,IAAI,CAAC8B,UAAD,EAAaW,MAAM,CAACV,IAApB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAE9B,gBADA;AAENkB,MAAAA,IAAI,EAAEW,MAAM,CAACX;AAFP,KAAD,CAAT;AAIA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAE7B,cADA;AAENiB,MAAAA,IAAI,EAAEW,MAAM,CAACX,IAAP,CAAYa;AAFZ,KAAD,CAAT;AAIH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZ,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEhC,gBADA;AAENoB,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAASe,WAAT,CAAqBf,IAArB,EAA2B;AACvB,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAY,aAAZ,CAApB;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAlB;AACA,QAAME,MAAM,GAAG;AACXE,IAAAA,KAAK,EAAGH;AADG,GAAf;AAGA,SAAO5B,KAAK,CAACyC,KAAN,CAAa,cAAahB,IAAK,OAA/B,EAAuCI,MAAvC,EAA8C;AACjDI,IAAAA,OAAO,EAAC;AACJ,uBAAkB,UAASP,WAAY,EADnC;AAEJ,qCAA+B,GAF3B;AAGJ,sBAAgB,kBAHZ;AAIJ,0CAAoC;AAJhC;AADyC,GAA9C,CAAP;AAQH;;AAED,UAAUgB,QAAV,CAAmBP,MAAnB,EAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAM1C,IAAI,CAAC8C,WAAD,EAAc,CAAd,CAAzB;AACA,UAAM/C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEzB,iBADA;AAENa,MAAAA,IAAI,EAAEW,MAAM,CAACX,IAAP,CAAYW;AAFZ,KAAD,CAAT;AAIH,GAND,CAME,OAAOG,KAAP,EAAc;AACZ,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAE3B,iBADA;AAENe,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAASkB,aAAT,CAAuBlB,IAAvB,EAA6B;AACzB,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAY,aAAZ,CAApB;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAlB;AACA,QAAME,MAAM,GAAG;AACXE,IAAAA,KAAK,EAAGH;AADG,GAAf;AAGA,SAAO5B,KAAK,CAAC4C,MAAN,CAAc,cAAanB,IAAK,OAAhC,EAAwCI,MAAxC,EAA+C;AAClDI,IAAAA,OAAO,EAAC;AACJ,uBAAkB,UAASP,WAAY,EADnC;AAEJ,sBAAgB,kBAFZ;AAGJ,0CAAoC;AAHhC;AAD0C,GAA/C,CAAP;AAOH;;AAED,UAAUmB,UAAV,CAAqBV,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAM1C,IAAI,CAACiD,aAAD,EAAgBR,MAAM,CAACV,IAAvB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEhB,mBADA;AAENI,MAAAA,IAAI,EAAEW,MAAM,CAACX,IAAP,CAAYW;AAFZ,KAAD,CAAT;AAIH,GAND,CAME,OAAOG,KAAP,EAAc;AACZ,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAElB,mBADA;AAENM,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAASqB,WAAT,CAAqBrB,IAArB,EAA2B;AACvB,SAAOzB,KAAK,CAAC2B,GAAN,CAAW,mBAAkBF,IAAI,CAACsB,UAAW,SAAQtB,IAAI,CAACuB,QAAS,EAAnE,CAAP;AACH;;AAED,UAAUC,QAAV,CAAmBd,MAAnB,EAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAM1C,IAAI,CAACoD,WAAD,EAAcX,MAAM,CAACV,IAArB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEtB,iBADA;AAENU,MAAAA,IAAI,EAAEW,MAAM,CAACX,IAAP,CAAYW;AAFZ,KAAD,CAAT;AAIH,GAND,CAME,OAAOG,KAAP,EAAc;AACZ,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAExB,iBADA;AAENY,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAASyB,aAAT,CAAuBzB,IAAvB,EAA6B;AACzB,SAAOzB,KAAK,CAACgC,IAAN,CAAW,WAAX,EAAwBP,IAAxB,CAAP;AACH;;AAED,UAAU0B,UAAV,CAAqBhB,MAArB,EAA6B;AACzB,MAAI;AAEA9C,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAM+D,EAAE,GAAGrD,OAAO,CAACsD,QAAR,EAAX;AACA,UAAM5D,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEnB,mBADA;AAENO,MAAAA,IAAI,EAAEU,MAAM,CAACV;AAFP,KAAD,CAAT;AAIA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEf,iBADA;AAENG,MAAAA,IAAI,EAAEU,MAAM,CAACV;AAFP,KAAD,CAAT;AAIH,GAZD,CAYE,OAAOc,KAAP,EAAc;AACZ,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAErB,mBADA;AAENS,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAAS6B,aAAT,CAAuB7B,IAAvB,EAA6B;AACzB,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAY,aAAZ,CAApB;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAlB;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,WAAW,EAAGL,IAAI,CAACK,WADR;AAEXC,IAAAA,KAAK,EAAGH,SAFG;AAGXU,IAAAA,MAAM,EAAGb,IAAI,CAACa;AAHH,GAAf;AAKA,SAAOtC,KAAK,CAACgC,IAAN,CAAW,eAAX,EAA4BH,MAA5B,EAAoC;AACnCI,IAAAA,OAAO,EAAC;AACJ,uBAAkB,UAASP,WAAY,EADnC;AAEJ,sBAAgB;AAFZ;AAD2B,GAApC,CAAP;AAOH;;AAED,UAAU6B,UAAV,CAAqBpB,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAM1C,IAAI,CAAC4D,aAAD,EAAgBnB,MAAM,CAACV,IAAvB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEjC,mBADA;AAENqB,MAAAA,IAAI,EAAEW,MAAM,CAACX;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOc,KAAP,EAAc;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,UAAM9C,GAAG,CAAC;AACN4C,MAAAA,IAAI,EAAEnC,mBADA;AAENuB,MAAAA,IAAI,EAAEc,KAAK,CAACd;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUiC,aAAV,GAAyB;AACrB,QAAMlE,UAAU,CAACmB,iBAAD,EAAoB+B,QAApB,CAAhB,CADqB,CAC0B;AAClD;;AAED,UAAUiB,eAAV,GAA2B;AACvB,QAAMnE,UAAU,CAAC4B,mBAAD,EAAsByB,UAAtB,CAAhB,CADuB,CAC4B;AACtD;;AAGD,UAAUe,YAAV,GAAwB;AACpB,QAAMjE,WAAW,CAACW,gBAAD,EAAmB4B,OAAnB,CAAjB,CADoB,CAC0B;AACjD;;AAED,UAAU2B,aAAV,GAAyB;AACrB,QAAMrE,UAAU,CAACsB,iBAAD,EAAoBmC,QAApB,CAAhB,CADqB,CAC0B;AAClD;;AAED,UAAUa,eAAV,GAA2B;AACvB,QAAMtE,UAAU,CAACyB,mBAAD,EAAsBkC,UAAtB,CAAhB,CADuB,CAC4B;AACtD;;AAED,UAAUY,eAAV,GAA2B;AACvB,QAAMvE,UAAU,CAACW,mBAAD,EAAsBoD,UAAtB,CAAhB,CADuB,CAC4B;AACtD;;AAED,eAAe,UAAUS,QAAV,GAAoB;AAC/B,QAAMzE,GAAG,CAAC,CACND,IAAI,CAACoE,aAAD,CADE,EAENpE,IAAI,CAACqE,eAAD,CAFE,EAGNrE,IAAI,CAACuE,aAAD,CAHE,EAINvE,IAAI,CAACsE,YAAD,CAJE,EAKNtE,IAAI,CAACwE,eAAD,CALE,EAMNxE,IAAI,CAACyE,eAAD,CANE,CAAD,CAAT;AAQH;AAAA","sourcesContent":["import { delay, fork, all, takeLatest, put, call, takeLeading, throttle, debounce, take} from \"redux-saga/effects\";\r\nimport shortId from \"shortid\";\r\nimport axios from 'axios';\r\n// import Axios from 'axios';\r\n// import qs from 'query-string';\r\nimport Cookies from 'universal-cookie';\r\nimport { \r\n    ADD_COMMENT_FAILURE, \r\n    ADD_COMMENT_REQUEST, \r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE, \r\n    ADD_POST_REQUEST, \r\n    ADD_POST_SUCCESS, \r\n    ADD_POST_TO_ME, \r\n    generateDummyPost, \r\n    LIKE_POST_FAILURE, \r\n    LIKE_POST_REQUEST, \r\n    LIKE_POST_SUCCESS, \r\n    LOAD_POST_FAILURE, \r\n    LOAD_POST_REQUEST, \r\n    LOAD_POST_SUCCESS, \r\n    REMOVE_POST_FAILURE, \r\n    REMOVE_POST_REQUEST, \r\n    REMOVE_POST_SUCCESS, \r\n    UNLIKE_POST_FAILURE, \r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS\r\n} from \"../reducers/post\";\r\nimport { REMOVE_POST_OF_ME } from \"../reducers/user\";\r\nconst cookies = new Cookies();\r\nfunction addPostAPI(data) {\r\n    const accessToken = cookies.get(\"accessToken\");\r\n    const userEmail = cookies.get(\"userEmail\");\r\n    const newObj = {\r\n        description : data,\r\n        email : userEmail\r\n    }\r\n    return axios.post('/auth/post', newObj,{\r\n        headers:{\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.postId,\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: error.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    const accessToken = cookies.get(\"accessToken\");\r\n    const userEmail = cookies.get(\"userEmail\");\r\n    const newObj = {\r\n        email : userEmail\r\n    };\r\n    return axios.patch(`/auth/post/${data}/like`, newObj,{\r\n        headers:{\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Credentials\": true\r\n        }\r\n    });\r\n}\r\n\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, 1);\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data.result,\r\n        }); \r\n    } catch (error) {\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            data: error.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    const accessToken = cookies.get(\"accessToken\");\r\n    const userEmail = cookies.get(\"userEmail\");\r\n    const newObj = {\r\n        email : userEmail\r\n    };\r\n    return axios.delete(`/auth/post/${data}/like`, newObj,{\r\n        headers:{\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Credentials\": true\r\n        }\r\n    });\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data.result,\r\n        }); \r\n    } catch (error) {\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            data: error.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get(`/api/posts?page=${data.pageNumber}&size=${data.pageSize}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n        const result = yield call(loadPostAPI, action.data);\r\n        yield put({\r\n            type: LOAD_POST_SUCCESS,\r\n            data: result.data.result,\r\n        }); \r\n    } catch (error) {\r\n        yield put({\r\n            type: LOAD_POST_FAILURE,\r\n            data: error.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        delay(1000);\r\n        const id = shortId.generate();\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n        yield put({ \r\n            type: REMOVE_POST_OF_ME,\r\n            data: action.data\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            data: error.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    const accessToken = cookies.get(\"accessToken\");\r\n    const userEmail = cookies.get(\"userEmail\");\r\n    const newObj = {\r\n        description : data.description,\r\n        email : userEmail,\r\n        postId : data.postId,\r\n    }\r\n    return axios.post('/auth/comment', newObj, {\r\n            headers:{\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: error.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLikePost(){\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nfunction* watchUnlikePost(){\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLeading(ADD_POST_REQUEST, addPost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nfunction* watchLoadPost(){\r\n    yield takeLatest(LOAD_POST_REQUEST, loadPost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nfunction* watchRemovePost(){\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchLikePost), \r\n        fork(watchUnlikePost), \r\n        fork(watchLoadPost), \r\n        fork(watchAddPost), \r\n        fork(watchRemovePost), \r\n        fork(watchAddComment), \r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}