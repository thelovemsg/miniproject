{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n}; //async action creator\n// action creator\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n}; // (이전 상태, 액션) => 다음 상태\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/miniproject/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","changeNickname","rootReducer","state","action","payload","isLoggedIn"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM,C,CAMP;AAEA;;AACA,MAAME,cAAc,GAAIH,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAG,iBADJ;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD,C,CAQA;;;AACA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKN,OAAL;AACI,6CACOU,KADP,GACiBC,MAAM,CAACC,OADxB;;AAGJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIR,QAAAA,IAAI,kCACGQ,KAAK,CAACR,IADT;AAEAW,UAAAA,UAAU,EAAC,IAFX;AAGAX,UAAAA,IAAI,EAAES,MAAM,CAACN;AAHb;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOK,KADP;AAEIR,QAAAA,IAAI,kCACGQ,KAAK,CAACR,IADT;AAEAW,UAAAA,UAAU,EAAC,KAFX;AAGAX,UAAAA,IAAI,EAAE;AAHN;AAFR;;AAQJ;AACI,aAAOQ,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n    user: {\r\n\r\n    },\r\n    post: {\r\n    },\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutAction = () => {\r\n    return {\r\n        type: 'LOG_OUT',\r\n    }\r\n}\r\n\r\n//async action creator\r\n\r\n// action creator\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type : 'CHANGE_NICKNAME',\r\n        data,\r\n    }\r\n};\r\n\r\n\r\n// (이전 상태, 액션) => 다음 상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn:true,\r\n                    user: action.data\r\n                }\r\n            };\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn:false,\r\n                    user: null,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}