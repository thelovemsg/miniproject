{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootsaga);\n\n//saga의 effects로 all, fork, call, put이 있다. \n//fork, call - generate함수를 실행한다. call은 동기함수, fork는 비동기 함수 호출\n//yield - 그곳에서 멈춘다. \n//put - dispatch라고 생각하면 편하다. \nimport { all, fork } from 'redux-saga/effects';\nimport postSaga from './post';\nimport userSaga from './user';\nexport default function rootsaga() {\n  return _regeneratorRuntime.wrap(function rootsaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(postSaga), // fork대신에 call로 사용도 가능. 조금 차이가 있다. \n          fork(userSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/miniproject/front/sagas/index.js"],"names":["rootsaga","all","fork","postSaga","userSaga"],"mappings":";;oDASyBA,Q;;AATzB;AACA;AACA;AACA;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACC,QAAD,CADE,EACU;AAChBD,UAAAA,IAAI,CAACE,QAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//saga의 effects로 all, fork, call, put이 있다. \r\n//fork, call - generate함수를 실행한다. call은 동기함수, fork는 비동기 함수 호출\r\n//yield - 그곳에서 멈춘다. \r\n//put - dispatch라고 생각하면 편하다. \r\nimport { all, fork } from 'redux-saga/effects';\r\n\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\n\r\nexport default function* rootsaga() {\r\n    yield all([\r\n        fork(postSaga), // fork대신에 call로 사용도 가능. 조금 차이가 있다. \r\n        fork(userSaga),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}