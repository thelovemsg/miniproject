{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"D:\\\\miniproject\\\\front\\\\components\\\\rightComponent\\\\LoginForm.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { jsx, css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginRequestAction } from '../../reducers/user';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nvar buttonStyle = css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 20px;\\n\"])));\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var onSubmitForm = useCallback(function (e) {\n    console.log(id, password);\n    dispatch(loginRequestAction({\n      id: id,\n      password: password\n    }));\n  }, [id, password]);\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(Form, {\n      onFinish: onSubmitForm,\n      children: [_jsxDEV(\"div\", {\n        children: [_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, _this), _jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, _this), _jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, _this), _jsxDEV(\"div\", {\n        children: [_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, _this), _jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, _this), _jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, _this), _jsxDEV(\"div\", {\n        children: [_jsxDEV(Button, {\n          css: buttonStyle,\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoggingIn,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, _this), _jsxDEV(Link, {\n          href: \"/signup\",\n          children: _jsxDEV(\"a\", {\n            children: _jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 38\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"qkDqfOxJq1siLkUNEtEjE+MGEgw=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/miniproject/front/components/rightComponent/LoginForm.js"],"names":["jsx","css","useCallback","useState","Link","useDispatch","useSelector","loginRequestAction","Form","Input","Button","useInput","buttonStyle","LoginForm","dispatch","state","user","isLoggingIn","id","onChangeId","password","onChangePassword","onSubmitForm","e","console","log"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { jsx, css } from '@emotion/react'\r\nimport { useCallback, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginRequestAction } from '../../reducers/user';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\nimport useInput from '../../hooks/useInput';\r\n\r\nconst buttonStyle = css`\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst LoginForm = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const { isLoggingIn } = useSelector((state) => state.user);\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        console.log(id, password);\r\n        dispatch(loginRequestAction({id,password}));\r\n    }, [id,password]);\r\n\r\n    return (\r\n        <>\r\n        <Form onFinish={onSubmitForm}> \r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br /> \r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br /> \r\n                <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required/>\r\n            </div>\r\n            <div>\r\n                <Button css={buttonStyle} type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n            </div>\r\n        </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}