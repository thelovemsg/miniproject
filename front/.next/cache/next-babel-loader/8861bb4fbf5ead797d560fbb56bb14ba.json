{"ast":null,"code":"import { delay, fork, all, takeLatest, put } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment); // 첫번째것만 하고 싶으면 takeLeading\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n;","map":{"version":3,"sources":["D:/miniproject/front/sagas/post.js"],"names":["delay","fork","all","takeLatest","put","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","axios","post","addPost","action","type","error","addCommentAPI","addComment","result","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuCC,GAAvC,QAAiD,oBAAjD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EACKC,gBADL,EACuBC,gBADvB,EACyCC,gBADzC,QACiE,kBADjE;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACAhB,IAAAA,KAAK,CAAC,IAAD,CAAL,CADA,CAEA;;AACA,UAAMI,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEP,gBADA;AAENE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOM,KAAP,EAAc;AACZ,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAET,gBADA;AAENI,MAAAA,IAAI,EAAEM,KAAK,CAACN;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,SAASO,aAAT,CAAuBP,IAAvB,EAA6B;AACzB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH;;AAED,UAAUQ,UAAV,CAAqBJ,MAArB,EAA6B;AACzB,MAAI;AACA;AACA,UAAMZ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEV,mBADA;AAENK,MAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEZ,mBADA;AAENO,MAAAA,IAAI,EAAEM,KAAK,CAACN;AAFN,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,YAAV,GAAwB;AACpB,QAAMnB,UAAU,CAACM,gBAAD,EAAmBM,OAAnB,CAAhB,CADoB,CACyB;AAChD;;AAED,UAAUQ,eAAV,GAA2B;AACvB,QAAMpB,UAAU,CAACG,mBAAD,EAAsBc,UAAtB,CAAhB,CADuB,CAC4B;AACtD;;AAED,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAMtB,GAAG,CAAC,CACND,IAAI,CAACqB,YAAD,CADE,EAENrB,IAAI,CAACsB,eAAD,CAFE,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import { delay, fork, all, takeLatest, put} from \"redux-saga/effects\";\r\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n     ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        delay(1000);\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: error.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: error.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment); // 첫번째것만 하고 싶으면 takeLeading\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost), \r\n        fork(watchAddComment), \r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}