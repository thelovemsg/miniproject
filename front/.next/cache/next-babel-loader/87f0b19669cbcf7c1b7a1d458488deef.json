{"ast":null,"code":"import shortId from 'shortid';\nimport produces, { produce } from 'immer';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'testnickname1'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\n    }, {\n      id: shortId.generate(),\n      src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\n    }, {\n      id: shortId.generate(),\n      src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"테스트로 들어가는 콘텐츠 1\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"theloveMSJ\"\n      },\n      content: \"테스트로 들어가는 콘텐츠 2\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommnetLoading: false,\n  addCommnetDone: false,\n  addCommnetError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'thelovedaejeon'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'thelovedaejeon'\n    }\n  };\n}; //이전 상태를 action을 통해 다음 상태로 만들어 내는 함수 (불변성을 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/miniproject/front/reducers/post.js"],"names":["shortId","produces","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommnetLoading","addCommnetDone","addCommnetError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","loadPostsLoading","loadPostsError","error","removePostLoading","removePostDone","removePostError","filter","v","addCommentLoading","addCommentDone","addCommentError","post","find","postId"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produces, { produce } from 'immer';\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname:'testnickname1'\r\n        },\r\n        content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n        Images:[{\r\n            id: shortId.generate(),\r\n            src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\r\n        },{\r\n            id: shortId.generate(),\r\n            src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\r\n        },{\r\n            id: shortId.generate(),\r\n            src: \"http://ftps.ypage.kr/test32/data/file/yp_carsale/3537439288_iWtA1VgZ_8cf8e8e516955136d56933d22c616457cf714b99.png\"\r\n        }],\r\n        Comments: [{\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: \"nero\",\r\n            },\r\n            content: \"테스트로 들어가는 콘텐츠 1\"\r\n        },{\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: \"theloveMSJ\"\r\n            },\r\n            content:\"테스트로 들어가는 콘텐츠 2\"\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommnetLoading: false,\r\n    addCommnetDone: false,\r\n    addCommnetError: null,\r\n} \r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'thelovedaejeon',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'thelovedaejeon',\r\n    },\r\n})\r\n\r\n//이전 상태를 action을 통해 다음 상태로 만들어 내는 함수 (불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => {\r\n    return produce (state, (draft) => {\r\n        switch (action.type){ \r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError= null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone= true;\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:{\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n                // const post = { ...state.mainPosts[postIndex] };\r\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = post;\r\n                // return {\r\n                //   ...state,\r\n                //   mainPosts,\r\n                //   addCommentLoading: false,\r\n                //   addCommentDone: true,\r\n                // };\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}