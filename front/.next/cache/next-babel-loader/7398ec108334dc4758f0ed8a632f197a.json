{"ast":null,"code":"var _jsxFileName = \"D:\\\\miniproject\\\\front\\\\components\\\\middleComponent\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Card, Popover, Avatar, List, Comment } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // optional chaining\n  // const id = me && me.id;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, _this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, _this), commentFormOpend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 8\n  }, _this);\n};\n\n_s(PostCard, \"zUyUVbSXxEHTya6nE1h7JeiwutY=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/miniproject/front/components/middleComponent/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","PropTypes","Form","Input","Button","Card","Popover","Avatar","List","Comment","ButtonGroup","useCallback","useState","useSelector","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpend","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Button, Card, Popover, Avatar, List, Comment } from 'antd';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpend, setCommentFormOpened] = useState(false); \r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n    const id = useSelector((state) => state.user.me?.id); // optional chaining\r\n    // const id = me && me.id;\r\n    return (\r\n       <div>\r\n           <Card key={post.id}\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>, \r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>\r\n                    ,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                            <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                            </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n            <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname} \r\n                description={<PostCardContent postData={post.content} />}\r\n            />\r\n            </Card>\r\n            {commentFormOpend && (\r\n                <div>\r\n                    {/* 어떤 게시글에 댓글을 달지 정보가 필요 - 게시글 id */}\r\n                    <CommentForm post={post}/>\r\n                    <List \r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>)}\r\n           {/* <CommentForm />\r\n           <Comments /> */}\r\n       </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}