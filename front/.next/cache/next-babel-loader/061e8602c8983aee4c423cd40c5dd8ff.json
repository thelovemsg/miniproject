{"ast":null,"code":"var _jsxFileName = \"D:\\\\miniproject\\\\front\\\\components\\\\middleComponent\\\\Post\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport useInput from '../../../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../../../reducers/post';\nimport { compose } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        positon: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        htmlType: \"submit\",\n        type: \"primary\",\n        loading: addCommentLoading,\n        children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/miniproject/front/components/middleComponent/Post/CommentForm.js"],"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","compose","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","positon","margin","position","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,OAAT,QAAwB,OAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGN,WAAW,CAAEO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAACI,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAsCX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAvD;AACA,QAAM,CAACQ,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDjB,QAAQ,CAAC,EAAD,CAAnE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGc,cAAH,EAAkB;AACdI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGpB,WAAW,CAAC,MAAM;AACtCU,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf,mBADD;AAELgB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAEN,WAAV;AAAuBO,QAAAA,MAAM,EAAEf,IAAI,CAACE,EAApC;AAAwCc,QAAAA,MAAM,EAAEd;AAAhD;AAFD,KAAD,CAAR;AAIH,GALkC,EAKhC,CAACM,WAAD,EAAcN,EAAd,CALgC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACM,QAAAA,OAAO,EAAC,UAAT;AAAqBC,QAAAA,MAAM,EAAC;AAA5B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEV,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,KAAK,EAAE;AAACU,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,KAAK,EAAC,CAA7B;AAAgCC,UAAAA,MAAM,EAAC,CAAC,EAAxC;AAA4CC,UAAAA,MAAM,EAAE;AAApD,SADX;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,OAAO,EAAEf,iBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjCD;;AAmCAR,WAAW,CAACwB,SAAZ,GAAwB;AACpBvB,EAAAA,IAAI,EAAEN,SAAS,CAAC8B,MAAV,CAAiBC;AADH,CAAxB;AAGA,eAAe1B,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport { useCallback, useEffect } from 'react';\r\nimport useInput from '../../../hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../../../reducers/post';\r\nimport { compose } from 'redux';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone, addCommentLoading} = useSelector((state) => state.post);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {content: commentText, postId: post.id, userId: id}\r\n        });\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{positon:'relative', margin:0 }}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button \r\n                    style={{position: 'absolute', right:0, bottom:-40, zIndex: 1}} \r\n                    htmlType=\"submit\" \r\n                    type=\"primary\"\r\n                    loading={addCommentLoading}>\r\n                        댓글 달기\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}