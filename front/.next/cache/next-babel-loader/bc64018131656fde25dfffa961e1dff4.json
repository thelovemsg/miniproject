{"ast":null,"code":"/** @jsxImportSource @emotion/react */\nimport { jsx, css } from '@emotion/react';\nimport Head from 'next/head';\nimport { Form, Input, Button, DatePicker, Space, Checkbox } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport { useCallback, useState } from 'react';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst errorMsg = css`\n  color: red;\n`;\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const changeBirthDay = useCallback((date, dateString) => {\n    console.log(date);\n    console.log(dateString);\n  });\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    console.log(term);\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, passwordCheck);\n    dispatchEvent({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return _jsxs(AppLayout, {\n    children: [_jsx(Head, {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | Miniproject\"\n    }), _jsxs(Form, {\n      onFinish: onSubmit,\n      layout: \"vertical\",\n      children: [_jsx(Form.Item, {\n        label: \"\\uC774\\uBA54\\uC77C\",\n        name: \"user-email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: _jsx(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail\n        })\n      }), _jsx(Form.Item, {\n        label: \"\\uB2C9\\uB124\\uC784\",\n        name: \"user-nickname\",\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!'\n        }],\n        children: _jsx(Input, {\n          name: \"user-nickname\",\n          value: nickname,\n          onChange: onChangeNickname\n        })\n      }), _jsx(Form.Item, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        name: \"user-password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: _jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword\n        })\n      }), _jsxs(Form.Item, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        name: \"user-passwor-check\",\n        rules: [{\n          required: true,\n          message: 'Please input your password again!'\n        }],\n        children: [_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          onChange: onChangePasswordCheck\n        }), passwordError && _jsx(\"div\", {\n          css: errorMsg,\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), _jsx(Form.Item, {\n        label: \"\\uC0DD\\uC77C\",\n        name: \"user-birthday\",\n        rules: [{\n          required: true,\n          message: 'Please input your birthday!'\n        }],\n        children: _jsx(DatePicker, {\n          onChange: changeBirthDay\n        })\n      }), _jsxs(Form.Item, {\n        name: \"user-term\",\n        rules: [{\n          required: true,\n          message: 'Please check agreement!'\n        }],\n        children: [_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC704 \\uC0AC\\uD56D\\uC5D0 \\uB300\\uD574 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }), termError && _jsx(\"div\", {\n          css: errorMsg,\n          children: \"\\uB3D9\\uC758\\uB97C \\uCCB4\\uD06C\\uD574\\uC8FC\\uC138\\uC694\"\n        })]\n      }), _jsx(Form.Item, {\n        children: _jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}