{"ast":null,"code":"var _jsxFileName = \"D:\\\\miniproject\\\\front\\\\components\\\\middleComponent\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/miniproject/front/components/middleComponent/CommentForm.js"],"names":["Form","Input","Button","useCallback","PropTypes","CommentForm","post","commentText","onChangeCommentText","useInput","onSubmitComment","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCC,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMC,eAAe,GAAGP,WAAW,CAAC,MAAM,CAEzC,CAFkC,EAEhC,CAACI,WAAD,CAFgC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEH,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAbD;;AAeAH,WAAW,CAACM,SAAZ,GAAwB;AACpBL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADH,CAAxB;AAGA,eAAeR,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n\r\n    }, [commentText])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button type=\"primary\">댓글 달기</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}