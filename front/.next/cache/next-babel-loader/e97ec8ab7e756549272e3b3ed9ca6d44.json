{"ast":null,"code":"var _jsxFileName = \"D:\\\\miniproject\\\\front\\\\components\\\\middleComponent\\\\Post\\\\PostCard.js\";\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Card, Popover, Avatar, List, Comment } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../../../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // optional chaining\n  // const id = me && me.id;\n\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: [\"\\uC218\\uC815 - \", removePostLoading]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), commentFormOpend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["D:/miniproject/front/components/middleComponent/Post/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","PropTypes","Form","Input","Button","Card","Popover","Avatar","List","Comment","ButtonGroup","useCallback","useState","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","removePostLoading","state","liked","setLiked","commentFormOpend","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","user","me","onRemovePost","type","data","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Button, Card, Popover, Avatar, List, Comment } from 'antd';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../../../reducers/post';\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpend, setCommentFormOpened] = useState(false); \r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n    const id = useSelector((state) => state.user.me?.id); // optional chaining\r\n    // const id = me && me.id;\r\n\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id\r\n        })\r\n    }, []);\r\n    return (\r\n       <div>\r\n           <Card key={post.id}\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>, \r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>\r\n                    ,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                            <>\r\n                                <Button>수정 - {removePostLoading}</Button>\r\n                                <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                            </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n            <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname} \r\n                description={<PostCardContent postData={post.content} />}\r\n            />\r\n            </Card>\r\n            {commentFormOpend && (\r\n                <div>\r\n                    {/* 어떤 게시글에 댓글을 달지 정보가 필요 - 게시글 id */}\r\n                    <CommentForm post={post}/>\r\n                    <List \r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>)}\r\n           {/* <CommentForm />\r\n           <Comments /> */}\r\n       </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}